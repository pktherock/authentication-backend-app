{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "description": "Authentication using Node MongoDB and Express jsðŸŒ¹",
    "title": "Authentication API"
  },
  "servers": [
    {
      "url": "https://authentication-backend-app.onrender.com/api/v1"
    },
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sign Up",
        "description": "This API endpoint is to register with userName email and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "userName",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user created"
          },
          "400": {
            "description": "Validation Error"
          },
          "409": {
            "description": "Resource already exist with this info."
          }
        }
      }
    },
    "/auth/verify-user/{userId}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": " Verify user to get token",
        "description": "This API endpoint is to verify user with userId and token",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User id to verify user"
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token to verify user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Incorrect Credentials"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": " Verify user status",
        "description": "This API endpoint is to verify user status",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User id to verify user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Incorrect Credentials"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "login to get jwt token",
        "description": "This API endpoint is to login with email and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Incorrect Credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT": {}
          }
        ],
        "summary": "logout feature",
        "description": "This API endpoint is to logout",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT": {}
          }
        ],
        "summary": "update userName, gender, phoneNumber, dateOfBirth and avatar",
        "description": "This API endpoint is to update user profile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 25
                  },
                  "profileImg": {
                    "type": "string",
                    "format": "binary"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "M",
                      "F",
                      "O"
                    ]
                  },
                  "phoneNumber": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Request Reset password",
        "description": "This API endpoint is to request reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/token-validate": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Validate Reset password",
        "description": "This API endpoint is to request reset password",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "token to get check validity"
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "userId id to check token is valid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset password",
        "description": "This API endpoint is to reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "userId",
                  "otp",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/change-email-request": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Request change email",
        "description": "This API endpoint is to request change email",
        "security": [
          {
            "JWT": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/change-email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change email",
        "description": "This API endpoint is to change email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change email",
        "description": "This API endpoint is to change email",
        "security": [
          {
            "JWT": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/delete-user": {
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "JWT": {}
          }
        ],
        "summary": "delete user feature",
        "description": "This API endpoint is to user info from portal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}